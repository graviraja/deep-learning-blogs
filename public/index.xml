
  <rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
      <title>Raviraja's Blog</title>
      <link>https://tailwind-nextjs-starter-blog.vercel.app/blog</link>
      <description>Blogs about Deep Learning and NLP</description>
      <language>en-us</language>
      <managingEditor>raviraja.ghanta@gmail.com (Raviraja Ganta)</managingEditor>
      <webMaster>raviraja.ghanta@gmail.com (Raviraja Ganta)</webMaster>
      <lastBuildDate>Mon, 16 Aug 2021 00:00:00 GMT</lastBuildDate>
      <atom:link href="https://tailwind-nextjs-starter-blog.vercel.app/index.xml" rel="self" type="application/rss+xml"/>
      
  <item>
    <guid>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-summary</guid>
    <title>MLOps Basics [Week 10]: Summary</title>
    <link>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-summary</link>
    <description>This post contains the summary of all topics covered till now, next steps and some good resources to follow.</description>
    <pubDate>Mon, 16 Aug 2021 00:00:00 GMT</pubDate>
    <author>raviraja.ghanta@gmail.com (Raviraja Ganta)</author>
    <category>mlops</category><category>deeplearning</category><category>nlp</category><category>deployment</category><category>vm</category><category>container</category><category>api</category><category>docker</category>
  </item>

  <item>
    <guid>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-monitoring</guid>
    <title>MLOps Basics [Week 9]: Prediction Monitoring - Kibana</title>
    <link>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-monitoring</link>
    <description>Monitoring systems can help give us confidence that our systems are running smoothly and, in the event of a system failure, can quickly provide appropriate context when diagnosing the root cause. Let's see how to use Kibana for prediction monitoring.</description>
    <pubDate>Mon, 09 Aug 2021 00:00:00 GMT</pubDate>
    <author>raviraja.ghanta@gmail.com (Raviraja Ganta)</author>
    <category>mlops</category><category>deeplearning</category><category>nlp</category><category>deployment</category><category>container</category><category>kibana</category><category>monitoring</category><category>aws</category><category>serverless</category><category>lambda</category>
  </item>

  <item>
    <guid>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-serverless</guid>
    <title>MLOps Basics [Week 8]: Serverless Deployment - AWS Lambda</title>
    <link>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-serverless</link>
    <description>A serverless architecture is a way to build and run applications and services without having to manage infrastructure. The application still runs on servers, but all the server management is done by third party service. Let's see how to run it using AWS Lambda.</description>
    <pubDate>Mon, 02 Aug 2021 00:00:00 GMT</pubDate>
    <author>raviraja.ghanta@gmail.com (Raviraja Ganta)</author>
    <category>mlops</category><category>deeplearning</category><category>nlp</category><category>deployment</category><category>container</category><category>ecr</category><category>docker</category><category>aws</category><category>serverless</category><category>lambda</category>
  </item>

  <item>
    <guid>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-container-registry</guid>
    <title>MLOps Basics [Week 7]: Container Registry - AWS ECR</title>
    <link>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-container-registry</link>
    <description>Developers, testers and CI/CD systems need to use a registry to store images created during the application development process. Container images placed in the registry can be used in various phases of the development. Let's see how to use AWS ECR for doing that.</description>
    <pubDate>Mon, 26 Jul 2021 00:00:00 GMT</pubDate>
    <author>raviraja.ghanta@gmail.com (Raviraja Ganta)</author>
    <category>mlops</category><category>deeplearning</category><category>nlp</category><category>deployment</category><category>s3</category><category>storage</category><category>container</category><category>registry</category><category>docker</category><category>aws</category><category>ecr</category>
  </item>

  <item>
    <guid>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-github-actions</guid>
    <title>MLOps Basics [Week 6]: CI/CD - GitHub Actions</title>
    <link>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-github-actions</link>
    <description>CI/CD is a coding philosophy and set of practices with which you can continuously build, test, and deploy iterative code changes. This iterative process helps reduce the chance that you develop new code based on buggy or failed previous versions. With this method, you strive to have less human intervention or even no intervention at all, from the development of new code until its deployment</description>
    <pubDate>Mon, 19 Jul 2021 00:00:00 GMT</pubDate>
    <author>raviraja.ghanta@gmail.com (Raviraja Ganta)</author>
    <category>mlops</category><category>deeplearning</category><category>nlp</category><category>deployment</category><category>cicd</category><category>workflow</category><category>github actions</category>
  </item>

  <item>
    <guid>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-docker</guid>
    <title>MLOps Basics [Week 5]: Model Packaging - Docker</title>
    <link>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-docker</link>
    <description>We might have to share our application with others, and when they try to run the app most of the time it doesnâ€™t run due to dependencies / OS related issues. Let's see how to solve this problem using Docker. </description>
    <pubDate>Mon, 05 Jul 2021 00:00:00 GMT</pubDate>
    <author>raviraja.ghanta@gmail.com (Raviraja Ganta)</author>
    <category>mlops</category><category>deeplearning</category><category>nlp</category><category>deployment</category><category>vm</category><category>container</category><category>api</category><category>docker</category>
  </item>

  <item>
    <guid>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-onnx</guid>
    <title>MLOps Basics [Week 4]: Model Packaging - ONNX</title>
    <link>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-onnx</link>
    <description>Models can be built using any machine learning framework available out there (sklearn, tensorflow, pytorch, etc.). We might want to run in a different framework (trained in pytorch, inference in tensorflow). A common file format will help a lot. In this post, let's see how to do this using ONNX.</description>
    <pubDate>Mon, 28 Jun 2021 00:00:00 GMT</pubDate>
    <author>raviraja.ghanta@gmail.com (Raviraja Ganta)</author>
    <category>mlops</category><category>deeplearning</category><category>nlp</category><category>deployment</category><category>model</category><category>compression</category><category>packaging</category><category>onnx</category>
  </item>

  <item>
    <guid>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-dvc</guid>
    <title>MLOps Basics [Week 3]: Data Version Control - DVC</title>
    <link>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-dvc</link>
    <description>Classical code version control systems are not designed to handle large files, which make cloning and storing the history impractical. Which are very common in Machine Learning. In this post, let's see how to use DVC for doing version controlling of models and data.</description>
    <pubDate>Mon, 21 Jun 2021 00:00:00 GMT</pubDate>
    <author>raviraja.ghanta@gmail.com (Raviraja Ganta)</author>
    <category>mlops</category><category>deeplearning</category><category>nlp</category><category>deployment</category><category>dvc</category><category>versioning</category><category>data</category><category>model</category>
  </item>

  <item>
    <guid>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-hydra-config</guid>
    <title>MLOps Basics [Week 2]: Configurations - Hydra</title>
    <link>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-hydra-config</link>
    <description>Configuration management is a necessary for managing complex software systems. Lack of configuration management can cause serious problems with reliability, uptime, and the ability to scale a system. In this post, let's see how to use Hydra tool for doing that.</description>
    <pubDate>Mon, 14 Jun 2021 00:00:00 GMT</pubDate>
    <author>raviraja.ghanta@gmail.com (Raviraja Ganta)</author>
    <category>mlops</category><category>deeplearning</category><category>nlp</category><category>deployment</category><category>configurations</category><category>hydra</category>
  </item>

  <item>
    <guid>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-wandb-integration</guid>
    <title>MLOps Basics [Week 1]: Model Monitoring - Weights and Bias</title>
    <link>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-wandb-integration</link>
    <description>Tracking all the experiments like tweaking hyper-parameters, trying different models to test their performance and seeing the connection between model and the input data will help in developing a better model. In this post, let's see how to use Weights and Bias tool for doing all that.</description>
    <pubDate>Mon, 07 Jun 2021 00:00:00 GMT</pubDate>
    <author>raviraja.ghanta@gmail.com (Raviraja Ganta)</author>
    <category>mlops</category><category>deeplearning</category><category>nlp</category><category>deployment</category><category>wandb</category><category>weights and bias</category>
  </item>

  <item>
    <guid>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-project-setup-part1</guid>
    <title>MLOps Basics [Week 0]: Project Setup</title>
    <link>https://tailwind-nextjs-starter-blog.vercel.app/blog/mlops-project-setup-part1</link>
    <description>The goal of the series is to understand the basics of MLOps (model building, monitoring, configurations, testing, packaging, deployment, cicd). As a first step, Let's setup the project.</description>
    <pubDate>Mon, 31 May 2021 00:00:00 GMT</pubDate>
    <author>raviraja.ghanta@gmail.com (Raviraja Ganta)</author>
    <category>mlops</category><category>deeplearning</category><category>nlp</category><category>deployment</category>
  </item>

    </channel>
  </rss>
